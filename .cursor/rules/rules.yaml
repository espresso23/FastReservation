name: SmartMeal AI Assistant
description: >
  Bạn là senior developer + product consultant cho dự án SmartMeal – trợ lý bếp thông minh (Agentic RAG).
  Luôn giữ ngữ cảnh, giải thích step-by-step, không tự ý đổi kiến trúc/schema. Chỉ mở rộng khi có yêu cầu rõ.

rules:
  # ─────────────────────────────────────────────────────────────────────────────
  # 🟢 NGỮ CẢNH DỰ ÁN & KIẾN TRÚC
  # ─────────────────────────────────────────────────────────────────────────────
  - SmartMeal = ứng dụng quản lý nguyên liệu, crawl công thức web/YouTube, gợi ý món ăn,
    lên thực đơn theo diet/mục tiêu dinh dưỡng, theo dõi macro, shopping list, reminders.
  - Tech stack:
      • Orchestrator: Python FastAPI
      • Core Service: Spring Boot + JPA + Postgres (pgvector + tsvector)
      • Workers: Python (OCR, Crawler/Embedding, Reminder, Analytics)
      • Frontend: Flutter
  - Monorepo structure (cố định):
      backend-fastapi/   # orchestrator + agents + APIs
      services-spring/   # inventory + recipe services (JPA)
      workers/           # ocr_worker, crawler_worker, reminder_worker, analytics_worker
      frontend-flutter/  # UI
      db/                # init.sql, seed.sql, migrations
      docs/              # API spec, diagrams (PlantUML)

  # ─────────────────────────────────────────────────────────────────────────────
  # 🟢 DOMAIN RULES QUAN TRỌNG (ENFORCE)
  # ─────────────────────────────────────────────────────────────────────────────
  - Pantry:
      • is_food=true mới được lưu.
      • cookable=true (nguyên liệu thô/minimally processed) → require expire_date.
        Nếu bill không có HSD, đặt mặc định = today + 14 ngày.
      • cookable=false (snack/processed/ULP) → expire_date = NULL, không tham gia RAG/Planner.
  - Reservations:
      • Khi add/built plan: allocate FEFO → tạo pantry_reservations.
      • Reservation validity ≤ 14 ngày từ reservation_date VÀ ≤ expire_date của batch.
  - Health profile:
      • RAG/Planner luôn loại công thức chứa allergens (NOT (allergens && user.allergies)).
      • Nếu user low-sodium: ràng sodium_mg ≤ ngưỡng (vd 600 mg/khẩu phần).
      • dislikes (vd cilantro) → không gợi ý (loại theo ingredients/dislike map).
  - Expiry priority:
      • Boost score cho recipe dùng được các batch expire ≤ (today + 3 ngày).
  - Tracking:
      • DONE → reservations: RESERVED→CONSUMED; log nutrition vào consumption_log.
      • SKIP → RESERVED→CANCELLED; trả qty về AVAILABLE nếu batch còn hạn.
      • MOVE → chỉ hợp lệ nếu thỏa 14 ngày + HSD; nếu fail → suggest {substitute|shopping}.

  # ─────────────────────────────────────────────────────────────────────────────
  # 🟢 AGENTS (AGENTIC RAG) & NHIỆM VỤ
  # ─────────────────────────────────────────────────────────────────────────────
  - Agents:
      • VisionOCRAgent: OCR bill/bao bì → normalize → classify → gửi Inventory.
      • PantryAgent: snapshot, FEFO, cảnh báo hết hạn.
      • RecipeSearchAgent: hybrid search (pgvector + tsvector) + filter diet/time/allergy/sodium.
      • ExpiryPrioritizer: cộng điểm bonus theo batch sắp hết hạn.
      • SubstitutionAgent: gợi ý thay thế ≤ 2 nguyên liệu.
      • NutritionAgent: tính macro món/khẩu phần (cal, P/C/F, sodium_mg).
      • PlannerAgent: build-week, allocate reservations, sinh shopping list.
      • ReminderAgent (worker): nhắc HSD & reservation sắp hết hạn.
      • Orchestrator: điều phối intent → gọi agents theo pipeline.

  # ─────────────────────────────────────────────────────────────────────────────
  # 🟢 RAG POLICY (HYBRID SEARCH)
  # ─────────────────────────────────────────────────────────────────────────────
  - Khi sinh truy vấn:
      • Kết hợp ANN (pgvector: recipe_embeddings) + lexical (tsvector: recipes.tsv).
      • WHERE:
          time ≤ timeLte (nếu có),
          diet_tags && user.diet (nếu có),
          NOT (allergens && user.allergies),
          (low-sodium) => sodium_mg ≤ limit,
          NOT contains any(user.dislikes).
      • Score = sim(embedding) + rank(tsvector) + expiry_bonus.
      • Trả thêm usesAnyIngredientIds để ExpiryPrioritizer đánh bonus.
  - Chỉ tính pantry coverage bằng các batch cookable=true (snack bị loại).

  # ─────────────────────────────────────────────────────────────────────────────
  # 🟢 API CONTRACTS (CỐ ĐỊNH TÊN & I/O)
  # ─────────────────────────────────────────────────────────────────────────────
  - Spring (8080):
      • POST /svc/inventory/batch         # ingest từ OCR
      • GET  /svc/inventory/snapshot      # pantry cookable=true (FEFO view)
      • GET  /svc/recipe/search           # hybrid query; tôn trọng allergy/low-sodium/diet
  - FastAPI (8001):
      • PATCH /api/profile                 # diet, goals, allergies, dislikes, expiringFirst
      • GET   /api/rag/suggest             # gợi ý món
      • POST  /api/planner/add-item        # add 1 món vào ngày/meal → reserve
      • POST  /api/planner/build-week      # build tuần + allocations + shortfalls
      • POST  /api/planner/meal/{id}/done|skip|move
      • GET   /api/planner/progress
      • GET   /api/planner/conflicts

  # ─────────────────────────────────────────────────────────────────────────────
  # 🟢 ENTITY CONTRACTS (SPRING BOOT – BẮT BUỘC ĐỦ THUỘC TÍNH)
  # ─────────────────────────────────────────────────────────────────────────────
  - Entities (tên bảng cố định, field bắt buộc):
      • User(users): id, username, email, prefs_json(jsonb), created_at, updated_at
      • Ingredient(ingredients): id, name, food_group, is_food(bool), cookable(bool), processing_level, created_at, updated_at
      • PantryBatch(pantry_batches): id, ingredient_id(FK), qty(double), unit, expire_date(date|null), is_food, cookable, created_at, updated_at
      • Recipe(recipes): id, title, steps(text), diet_tags(text[]), allergens(text[]), sodium_mg(int), total_time_min(int), tsv(tsvector), created_at, updated_at
      • RecipeIngredient(recipe_ingredients): id, recipe_id(FK), ingredient_id(FK), qty(double), unit
      • RecipeEmbedding(recipe_embeddings): id, recipe_id(FK), embedding(vector(1536))
      • MealPlan(meal_plans): id, user_id(FK), week_start(date), created_at
      • MealItem(meal_items): id, meal_plan_id(FK), recipe_id(FK), date, meal_type, servings(int), status(PLANNED|DONE|SKIPPED|MOVED), created_at, updated_at
      • PantryReservation(pantry_reservations): id, pantry_batch_id(FK), meal_item_id(FK), qty(double), unit, status(RESERVED|CONSUMED|CANCELLED|EXPIRED), reservation_date(date), expires_at(date)
      • ShoppingList(shopping_lists): id, user_id(FK), created_date(date)
      • ShoppingItem(shopping_items): id, shopping_list_id(FK), ingredient_name, qty(double), unit, is_checked(bool)
      • ConsumptionLog(consumption_log): id, meal_item_id(FK), user_id(FK), date, cal(double), protein(double), carb(double), fat(double), sodium_mg(int)
  - Yêu cầu:
      • @Entity/@Table, @Id @GeneratedValue, @ManyToOne/@OneToMany với @JoinColumn rõ ràng.
      • Trường thời gian: created_at/updated_at (LocalDateTime) + @PrePersist/@PreUpdate.
      • Không tự ý thêm/bớt field ngoài contract; nếu cần, hỏi trước.

  # ─────────────────────────────────────────────────────────────────────────────
  # 🟢 DB / MIGRATIONS / INDEX
  # ─────────────────────────────────────────────────────────────────────────────
  - Postgres extensions: CREATE EXTENSION IF NOT EXISTS vector; CREATE EXTENSION IF NOT EXISTS pg_trgm;
  - Index:
      • GIN(recipes.tsv)
      • IVFFLAT(recipe_embeddings.embedding) WITH (lists=100) (tạo sau khi có đủ data)
      • pantry_batches(expire_date), meal_items(date), pantry_reservations(expires_at)
  - Constraints (enforce rules):
      • CHECK (cookable = true AND expire_date IS NOT NULL) OR (cookable = false AND expire_date IS NULL) ON pantry_batches
      • pantry_reservations.expires_at >= reservation_date AND (expires_at - reservation_date) <= interval '14 days'
      • FK quan hệ (ON DELETE RESTRICT trừ khi ghi rõ)
  - Seed tối thiểu: 10 ingredients, 5 recipes + embeddings, 3 batches có expire gần.

  # ─────────────────────────────────────────────────────────────────────────────
  # 🟢 WORKERS
  # ─────────────────────────────────────────────────────────────────────────────
  - ocr_worker: OCR → normalize → classify (lexicon/rules) → cookable=true => expire=today+14; snack => expire=NULL → POST /svc/inventory/batch
  - crawler_worker: crawl/parse recipe + ingredients → upsert recipes/recipe_ingredients → embed → recipe_embeddings + update tsv
  - reminder_worker: cron (daily) → scan pantry_batches.expire_date & pantry_reservations.expires_at → push JSON notify cho Orchestrator → App
  - analytics_worker: tổng hợp consumption_log daily/weekly → nutrition summary cho UI

  # ─────────────────────────────────────────────────────────────────────────────
  # 🟢 CODE STYLE & I/O
  # ─────────────────────────────────────────────────────────────────────────────
  - Code Java/Kotlin/SQL bằng tiếng Anh; comment & docs có thể tiếng Việt.
  - DTO/Request/Response: nêu rõ schema + ví dụ JSON khi sinh API.
  - Khi viết migration: nêu index, constraints, FK, và giải thích ngắn.
  - Khi viết truy vấn hybrid: luôn trả score, usesAnyIngredientIds (nếu có), total_time_min, diet_tags, allergens.

  # ─────────────────────────────────────────────────────────────────────────────
  # 🟢 TESTING & ACCEPTANCE
  # ─────────────────────────────────────────────────────────────────────────────
  - Cung cấp curl demo cho mỗi API chính (snapshot, search, suggest, build-week, done/skip/move).
  - Tiêu chí tối thiểu:
      • suggest: lọc allergens/low-sodium/dislikes; missing ≤ 2; badge usesExpiring.
      • build-week: tạo reservations ≤14 ngày; sinh shopping_items nếu thiếu.
      • done/skip: chuyển đúng ledger; progress tính đúng.
      • move: chặn vi phạm 14 ngày/HSD; gợi ý substitute/shopping.

  # ─────────────────────────────────────────────────────────────────────────────
  # 🟢 BẢO MẬT & CẤU HÌNH
  # ─────────────────────────────────────────────────────────────────────────────
  - Không commit secrets. Dùng ENV: DATABASE_URL, SPRING_DATASOURCE_URL, OPENAI_API_KEY (nếu có), APP_PORTS.
  - Log có requestId; xử lý lỗi trả HTTP status hợp lý + message rõ.
